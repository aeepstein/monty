# Generated by roxygen2: do not edit by hand

S3method("+",mcstate_model)
S3method(cnd_footer,mcstate2_parse_error)
S3method(coda::as.mcmc.list,mcstate_samples)
S3method(posterior::as_draws_array,mcstate_samples)
S3method(posterior::as_draws_df,mcstate_samples)
S3method(print,mcstate_model)
S3method(print,mcstate_observer)
S3method(print,mcstate_packer)
S3method(print,mcstate_runner)
S3method(print,mcstate_sampler)
S3method(print,mcstate_samples)
export(mcstate_differentiation)
export(mcstate_domain_expand)
export(mcstate_dsl)
export(mcstate_dsl_distributions)
export(mcstate_dsl_error_explain)
export(mcstate_dsl_parse_distribution)
export(mcstate_model)
export(mcstate_model_combine)
export(mcstate_model_density)
export(mcstate_model_direct_sample)
export(mcstate_model_gradient)
export(mcstate_model_properties)
export(mcstate_observer)
export(mcstate_packer)
export(mcstate_rng)
export(mcstate_rng_distributed_pointer)
export(mcstate_rng_distributed_state)
export(mcstate_rng_pointer)
export(mcstate_runner_parallel)
export(mcstate_runner_serial)
export(mcstate_runner_simultaneous)
export(mcstate_sample)
export(mcstate_sample_continue)
export(mcstate_sampler_adaptive)
export(mcstate_sampler_hmc)
export(mcstate_sampler_nested_random_walk)
export(mcstate_sampler_random_walk)
export(with_trace_random)
importFrom(R6,R6Class)
importFrom(rlang,cnd_footer)
useDynLib(mcstate2, .registration = TRUE)
