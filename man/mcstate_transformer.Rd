% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transform.R
\name{mcstate_transformer}
\alias{mcstate_transformer}
\title{Build a parameter transformer}
\usage{
mcstate_transformer(scalar = NULL, array = NULL, fixed = NULL, process = NULL)
}
\arguments{
\item{scalar}{Names of scalar parameters.  This is similar for
listing elements in \code{array} with values of 1, though elements in
\code{scalar} will be placed ahead of those listed in \code{array} within
the final parameter vector, and elements in \code{array} will have
generated names that include square brackets.}

\item{array}{A list, where names correspond to the names of array
parameters and values correspond to the lengths of parameters.
Multiple dimensions are allowed (so if you provide an element
with two entries these represent dimensions of a matrix).  In
future, you may be able to use \emph{strings} as values for the
lengths, in which case these will be looked for within \code{fixed}.}

\item{fixed}{A named list of fixed parameters; these will be added
into the final list directly.  These typically represent
additional pieces of data that your model needs to run, but for
which you are not performing inference on.}

\item{process}{An arbitrary R function that will be passed the
final assembled parameter list and will process it - this
function should return a named list too, but can do whatever
processing you need.  The default is not to have any processing
(equivalent to using \link{identity}).  If you use this, you should
take care to only append onto your list, and not to modify any
values - otherwise you will break the generated \code{untransform}
method.  We will likely play around with this process in future
in order to get automatic differentiation to work.}
}
\value{
An object of class \code{mcstate_transformer}, which has three
elements:
\itemize{
\item \code{parameters}: a character vector of computed parameter names;
these are the names that your statistical model will use.
\item \code{transform}: a function that can transform from your statistical
parameters into a structured list of parameters.
\item \code{untransform}: a function that can untransform from your
structured list of parameters back into a numeric vector
suitable for the statistical model.  This cannot untransform
through a \code{preprocess} function.
}
}
\description{
Build a parameter transformer, which can be used in models to
translate between an unstructured vector of numbers (the vector
being updated by an MCMC for example) to a structured list of
named values, which is easier to program against.
}
