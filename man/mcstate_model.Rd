% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{mcstate_model}
\alias{mcstate_model}
\title{Create basic model}
\usage{
mcstate_model(model, properties = NULL)
}
\arguments{
\item{model}{A list or environment with elements as described in
Details.}

\item{properties}{Optionally, a \link{mcstate_properties} object, used
to enforce or clarify properties of the model.}
}
\value{
An object of class \code{mcstate_model}.  This will have elements:
\itemize{
\item \code{model}: The model as provided
\item \code{parameters}: The parameter name vector
\item \code{domain}: The parameter domain matrix
\item \code{direct_sample}: The \code{direct_sample} function, if provided by the model
\item \code{gradient}: The \code{gradient} function, if provided by the model
\item \code{properties}: A list of properties of the model;
see \code{\link[=mcstate_model_properties]{mcstate_model_properties()}}.  Currently this contains:
\itemize{
\item \code{has_gradient}: the model can compute its gradient
\item \code{has_direct_sample}: the model can sample from parameters space
}
}
}
\description{
Create a basic \code{mcstate} model.  This takes a user-supplied object
that minimally can compute a probability density (via a \code{density}
function) and information about parameters; with this we can
sample from the model using \code{MCMC} using \link{mcstate_sample}.  We
don't imagine that many users will call this function directly,
but that this will be glue used by packages.
}
\details{
The \code{model} argument can be a list or environment (something
indexable by \code{$}) and have elements:
\itemize{
\item \code{density}: A function that will compute some probability
density.  It must take an argument representing a parameter
vector (a numeric vector) and return a single value.  This is
the posterior probability density in Bayesian inference, but it
could be anything really.  Models can return \code{-Inf} if things
are impossible, and we'll try and cope gracefully with that
wherever possible.
\item \code{parameters}: A character vector of parameter names.  This can
be overridden by the \code{parameters} argument to this function.
This vector is the source of truth for the length of the
parameter vector.
\item \code{domain}: Information on the parameter domain.  This can be
overridden by the \code{domain} argument to this function.  This is a
two column matrix with \code{length(parameters)} rows representing
each parameter.  The parameter minimum and maximum bounds are
given as the first and second column.  Infinite values (\code{-Inf}
or \code{Inf}) should be used where the parameter has infinite domain
up or down.  Currently used to translate from a bounded to
unbounded space for HMC, but we might also use this for
reflecting proposals in MCMC too.  If not present (and if not
overridden by \code{domain}) we assume that the model is valid
everywhere (i.e., that all parameters are valid from \code{-Inf} to
\code{Inf}.
\item \code{direct_sample}: A function to sample directly from the
parameter space, given an \link{mcstate_rng} object to sample from.
In the case where a model returns a posterior (e.g., in Bayesian
inference), this is assumed to be sampling from the prior.
We'll use this for generating initial conditions for MCMC where
those are not given, and possibly other uses.  If not given then
when using \code{\link[=mcstate_sample]{mcstate_sample()}} the user will have to provide a
vector of initial states.
\item \code{gradient}: A function to compute the gradient of \code{density} with
respect to the parameter vector; takes a parameter vector and
returns a vector the same length.  For efficiency, the model may
want to be stateful so that gradients can be efficiently
calculated after a density calculation, or density after
gradient, where these are called with the same parameters.  This
function is optional (and may not be well defined or possible to
define).
}
}
